---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";

// Fetch all entries from the 'log' collection
const logEntries = await getCollection("log");

// Sort entries by publication date, newest first
const sortedLogEntries = logEntries.sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Render each entry's content
// We need to render them individually to get the Content component for each
const renderedEntries = await Promise.all(
	sortedLogEntries.map(async (entry) => {
		const { Content } = await entry.render();
		return {
			...entry, // Spread the original entry data
			Content, // Add the rendered Content component
		};
	})
);
---

<Layout
	title="LatteArtist Log: Behind the Scenes & Updates"
	description="Follow the development journey of LatteArtist, the iOS app for latte art tracking. Get updates, insights, and behind-the-scenes looks."
	ogTitle="LatteArtist Dev Log: Building an iOS Latte Art Tracker"
	ogDescription="Peek behind the scenes! Read the latest updates and insights from the development of LatteArtist, the app designed to help you master latte art."
	ogUrl="https://latteartist.coffeeatpetros.com/log"
	twitterTitle="LatteArtist Log: Behind the Scenes & Updates"
	twitterDescription="Follow the development journey of LatteArtist, the iOS app for latte art tracking. Get updates, insights, and behind-the-scenes looks."
>
	<h1
		class="text-4xl md:text-5xl font-semibold mb-4 text-title-light dark:text-title-dark"
	>
		Development Log
	</h1>
	<p class="text-lg font-light text-secondary mb-12">
		Updates, thoughts, and progress notes during development.
	</p>

	{
		renderedEntries.map((entry, index) => (
			<article class="mb-12">
				<h2 class="text-2xl font-medium uppercase mb-2 text-title-light dark:text-title-dark">
					{entry.data.title}
				</h2>
				<p class="text-sm text-secondary block mb-4">
					Published on:{" "}
					{entry.data.pubDate.toLocaleDateString("en-GB", {
						year: "numeric",
						month: "long",
						day: "numeric",
					})}
				</p>
				<div class="prose dark:prose-invert max-w-none prose-p:text-foreground prose-headings:text-title-light dark:prose-headings:text-title-dark prose-a:text-link hover:prose-a:text-link-hover prose-strong:text-foreground">
					<entry.Content />
				</div>
				{/* Add a separator unless it's the last entry */}
				{index < renderedEntries.length - 1 && (
					<hr class="mt-12 mb-12 border-t border-gray-200 dark:border-gray-700" />
				)}
			</article>
		))
	}
</Layout>
