---
// src/components/FeaturesCard.astro

// Define feature data in the frontmatter
const features = [
    {
        text: "Capture each pour with photo and notes",
        svgContent: `
			<path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path>
			<circle cx="12" cy="13" r="4"></circle>
		`,
    },
    {
        text: "Track progress by pattern (e.g., tulips over time)",
        svgContent: `
			<line x1="12" y1="20" x2="12" y2="10"></line>
			<line x1="18" y1="20" x2="18" y2="4"></line>
			<line x1="6" y1="20" x2="6" y2="16"></line>
		`,
    },
    {
        text: "Rate pours to reflect how you felt about them",
        svgContent: `
			<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
		`,
    },
    {
        text: "Filter by cup, milk type, pattern, and more",
        svgContent: `
			<polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>
		`,
    },
    {
        text: "Share progress collages (Planned!)",
        svgContent: `
			<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
			<circle cx="8.5" cy="8.5" r="1.5"></circle>
			<polyline points="21 15 16 10 5 21"></polyline>
		`,
    },
];
---

<div
    class="bg-card p-8 rounded-3xl border border-gray-100 dark:border-gray-800 shadow-xl shadow-black/2 dark:shadow-none w-full mb-8 animate-fadeInUp opacity-0"
    style="animation-delay: 0.5s"
>
    <h2 class="mb-8 text-center text-xl">How LatteArtist Helps You Improve</h2>
    <!-- Timeline Container -->
    <div class="relative pl-5">
        <!-- Vertical Line -->
        <div
            class="absolute left-px top-[2px] bottom-0 w-0.5 bg-gray-300 dark:bg-gray-600"
            aria-hidden="true"
        >
        </div>

        <!-- Timeline Items -->
        <ul class="list-none p-0 m-0 space-y-8">
            {
                features.map((feature) => (
                    <li class="relative pl-10">
                        {/* Icon Wrapper (Timeline Point) */}
                        <div class="timeline-point absolute left-[-2rem] top-[2px] w-7 h-7 bg-card border-2 border-gray-300 dark:border-gray-600 rounded-full flex items-center justify-center transition-colors duration-300 ease-in-out">
                            <span class="inline-flex items-center justify-center w-4 h-4 flex-shrink-0">
                                <svg
                                    class="w-full h-full stroke-[1.5] fill-none"
                                    stroke="var(--text-secondary)"
                                    xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 24 24"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    set:html={feature.svgContent}
                                />
                            </span>
                        </div>
                        {/* Content */}
                        <div class="text-secondary leading-snug">
                            {feature.text}
                        </div>
                    </li>
                ))
            }
        </ul>
    </div>
</div>

<style>
    .timeline-point {
        /* Smooth transitions for border, transform, and glow */
        transition:
            border-color 0.3s ease-in-out,
            transform 0.3s ease-in-out,
            box-shadow 0.3s ease-in-out; /* Added transform and box-shadow */
    }
    .timeline-point svg {
        /* Smooth transition for SVG stroke color */
        transition: stroke 0.3s ease-in-out;
    }

    .timeline-point.highlighted {
        border-color: var(--brand-accent);
        transform: scale(1.05); /* Add subtle scale */
        /* Glow is handled by the 'shadow-brand-glow' utility class added via JS */
    }

    .timeline-point.highlighted svg {
        stroke: var(--brand-accent);
    }
</style>

<script>
    // src/components/FeaturesCard.astro - Animation Script
    const timelinePoints = document.querySelectorAll(".timeline-point");
    const glowClass = "shadow-brand-glow"; // Utility class for glow effect
    const highlightClass = "highlighted"; // Custom class for highlight effect
    const animationInterval = 4000; // 2 seconds

    let currentIndex = 0; // Start from the top

    function animateTimeline() {
        // Remove highlight from all points first
        timelinePoints.forEach((point) => {
            point.classList.remove(highlightClass);
            point.classList.remove(glowClass); // Remove glow
        });

        // Add highlight to the current point
        const currentPoint = timelinePoints[currentIndex];
        if (currentPoint) {
            currentPoint.classList.add(highlightClass);
            currentPoint.classList.add(glowClass); // Add glow
        }

        // Move to the next point (visually downwards) for the next cycle
        currentIndex++;
        if (currentIndex >= timelinePoints.length) {
            currentIndex = 0; // Loop back to the top
        }
    }

    // Start the animation loop
    if (timelinePoints.length > 0) {
        // Initial highlight before interval starts
        animateTimeline();
        setInterval(animateTimeline, animationInterval);
    }
</script>
